[{"d:\\OSPanel\\domains\\pokemons\\src\\index.js":"1","d:\\OSPanel\\domains\\pokemons\\src\\App.js":"2","d:\\OSPanel\\domains\\pokemons\\src\\reportWebVitals.js":"3","d:\\OSPanel\\domains\\pokemons\\src\\components\\pokemon_cart\\pokemon_cart.js":"4","d:\\OSPanel\\domains\\pokemons\\src\\components\\menu\\menu.js":"5","d:\\OSPanel\\domains\\pokemons\\src\\components\\pokemon_info_page\\pokemon_info_page.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":4332,"mtime":1611321514884,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":6674,"mtime":1611321180100,"results":"11","hashOfConfig":"8"},{"size":2704,"mtime":1611300675432,"results":"12","hashOfConfig":"8"},{"size":3160,"mtime":1611299806317,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"14von1t",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"d:\\OSPanel\\domains\\pokemons\\src\\index.js",[],["29","30"],"d:\\OSPanel\\domains\\pokemons\\src\\App.js",[],"d:\\OSPanel\\domains\\pokemons\\src\\reportWebVitals.js",[],"d:\\OSPanel\\domains\\pokemons\\src\\components\\pokemon_cart\\pokemon_cart.js",[],"d:\\OSPanel\\domains\\pokemons\\src\\components\\menu\\menu.js",["31"],"import React, { Component } from 'react';\r\nimport './menu.css';\r\nimport axios from \"axios\";\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    /*\r\n    * состояние данные покемонов и ссылка на первый набор данных имен покемонов\r\n    * */\r\n    state={\r\n       pokemonsdata:[],\r\n        firsturl:'https://pokeapi.co/api/v2/pokemon/?offset=0&limit=50',\r\n    }\r\n\r\n    /*\r\n    * метод при клике по элементу меню, передается родителю компонента изменение состояние скрытие карточки покемонов,\r\n    * ссылка на страницу покемона и закрытие списка меню\r\n    * */\r\n    menuElementClick = (url) => {\r\n        this.props.hidePokemonsCart(true);\r\n        this.props.setPokemonInfoUrl(url);\r\n        this.props.menuClose(false);\r\n    }\r\n\r\n    /*\r\n    * метод получение данных покемонов по ссылке, получанные данные добавляется на состояние данных покемонов,\r\n    * и проверятся ссылка на следующий набор данных покемона из ответа, если ссылка имеется, то вызывается\r\n    * метод рекурсивно до конца набора данных.\r\n    * */\r\n    GetPokemonsNameList = (url) => {\r\n        axios.get(url)\r\n            .then(res => {\r\n                const data= res.data.results;\r\n                const nexturl = res.data.next;\r\n                this.setState({ pokemonsdata:this.state.pokemonsdata.concat(data) });\r\n                if(nexturl!==null){\r\n                    this.GetPokemonsNameList(nexturl);\r\n                }\r\n            })\r\n    }\r\n\r\n    /*\r\n    * при монтировании компонента вызывается метод получение данных покемонов по ссылке по начальной ссылке\r\n    * */\r\n    componentDidMount = () => {\r\n        this.GetPokemonsNameList(this.state.firsturl);\r\n    }\r\n\r\n    /*\r\n    * рендеринг списка покемонов по состоянием данных покемонов\r\n    * */\r\n    render() {\r\n                return (\r\n                    <ul className=\"menu_ul\">\r\n                    {this.state.names.map(key => <li className=\"menu_li\" key={key.name}\r\n                                                     onClick={() => this.menuElementClick(key.url)}>{key.name}</li>)}\r\n                </ul>\r\n                );\r\n    }\r\n}\r\n\r\nexport     default     Menu;","d:\\OSPanel\\domains\\pokemons\\src\\components\\pokemon_info_page\\pokemon_info_page.js",["32"],"import React, { Component } from 'react';\r\nimport './pokemon_info_page.css';\r\nimport axios from 'axios';\r\n\r\nclass PokemonInfoPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    /*\r\n    * состоянии имя, ссылка на изображение, рост, вес, тип, характеристики, движении покемона\r\n    * */\r\n    state = {\r\n        name:'',\r\n        img:'',\r\n        height:'',\r\n        weight:'',\r\n        types:[],\r\n        abilities:[],\r\n        moves:[],\r\n    }\r\n\r\n    /*\r\n    * метод для получение информации покемона по ссылке, по ответу сервера обновляет состояние данных покемона\r\n    * */\r\n    GetPokemonInfo = (url) => {\r\n        axios.get(url)\r\n            .then(res => {\r\n                const name= res.data.name;\r\n                const img = res.data.sprites.other['official-artwork'].front_default;\r\n                const height = res.data.height;\r\n                const weight = res.data.weight;\r\n                const types = res.data.types;\r\n                const abilities = res.data.abilities;\r\n                const moves =res.data.moves;\r\n                this.setState({ name,img,height,weight,types,abilities,moves });\r\n            })\r\n    }\r\n\r\n    /*\r\n    * вызов метода обновление данных покемона по ссылке при монтировании компонента\r\n    * */\r\n    componentDidMount = () => {\r\n       this.GetPokemonInfo(this.props.url);\r\n    }\r\n\r\n    /*\r\n    * вызов метода обновление данных покемона по ссылке при получении ссылки на покемона родителем компонента\r\n    * */\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.url!==this.props.url){\r\n            this.GetPokemonInfo(nextProps.url);\r\n        }\r\n    }\r\n\r\n    /*\r\n    * рендеринг по состоянии данных покемона\r\n    * */\r\n    render() {\r\n        return (\r\n            <div className=\"pokemonInfoCart\">\r\n                <img className=\"avatar\" src={this.state.img} alt={ this.state.name}/>\r\n                <h3 className=\"pokemonInfoName\">\r\n                    Name : {this.state.name}\r\n                </h3>\r\n                <p> height : {this.state.height} </p>\r\n                <p> weight : {this.state.weight} </p>\r\n                <b>Type :</b>\r\n                <ul className=\"parameters\">\r\n                    { this.state.types.map(key => <li key={key.state}>{key.type['name']}</li>)}\r\n                </ul>\r\n                <b>Abilities:</b>\r\n                <ul className=\"parameters\">\r\n                    { this.state.abilities.map(key => <li key={key.slot}>{key.ability['name']}</li>)}\r\n                </ul>\r\n                <b>Moves:</b>\r\n                <ul className=\"parameters\">\r\n                    { this.state.moves.map(key => <li key={key.move['name']}>{key.move['name']}</li>)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport     default     PokemonInfoPage;\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":6,"column":5,"nodeType":"39","messageId":"40","endLine":8,"endColumn":6},{"ruleId":"37","severity":1,"message":"38","line":6,"column":5,"nodeType":"39","messageId":"40","endLine":8,"endColumn":6},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]